version: '3.8'
  # Frontend - Next.js App
services:
  frontend:
    container_name: "${PROJECT_NAME}_frontend"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://10.0.0.5:3005
      - NEXT_PUBLIC_AI_URL=http://10.0.0.5:3005
      - NEXT_PUBLIC_SITE_URL=http://10.0.0.5:3005
    networks:
      my_custom_network:
        ipv4_address: ${APP_IP}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx - Reverse Proxy
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - frontend
  #     - backend
  #     - ai-assistant
  #   networks:
  #     - english-learning-network
  #   restart: unless-stopped

  # Monitoring - Prometheus
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   networks:
  #     - english-learning-network
  #   restart: unless-stopped

  # Logging - Grafana
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - english-learning-network
  #   restart: unless-stopped

networks:
  my_custom_network:
    external: true
